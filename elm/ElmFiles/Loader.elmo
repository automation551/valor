
Elm.Loader = function(elm){
  var N = Elm.Native, _N = N.Utils(elm), _L = N.List(elm), _E = N.Error(elm), _J = N.JavaScript(elm), _str = _J.toString;
  var $op = {};
  var _ = Elm.Text(elm); var Text = _; var hiding={link:1, color:1, height:1}; for(var k in _){if(k in hiding)continue;eval('var '+k+'=_["'+k+'"]')}
  var _ = Elm.Prelude(elm); var Prelude = _; var hiding={}; for(var k in _){if(k in hiding)continue;eval('var '+k+'=_["'+k+'"]')}
  var _ = Elm.Signal(elm); var Signal = _; var hiding={}; for(var k in _){if(k in hiding)continue;eval('var '+k+'=_["'+k+'"]')}
  var _ = Elm.List(elm); var List = _; var hiding={}; for(var k in _){if(k in hiding)continue;eval('var '+k+'=_["'+k+'"]')}
  var _ = Elm.Time(elm); var Time = _; var hiding={}; for(var k in _){if(k in hiding)continue;eval('var '+k+'=_["'+k+'"]')}
  var _ = Elm.Graphics.Element(elm); var Graphics = Graphics||{};Graphics.Element = _; var hiding={}; for(var k in _){if(k in hiding)continue;eval('var '+k+'=_["'+k+'"]')}
  var _ = Elm.Color(elm); var Color = _; var hiding={}; for(var k in _){if(k in hiding)continue;eval('var '+k+'=_["'+k+'"]')}
  var _ = Elm.Graphics.Collage(elm); var Graphics = Graphics||{};Graphics.Collage = _; var hiding={}; for(var k in _){if(k in hiding)continue;eval('var '+k+'=_["'+k+'"]')}
  var _ = Elm.Http(elm); var Http = _;
  var Success = _.Success, sendGet = _.sendGet;
  var _ = Elm.Json(elm); var Json = _;
  var JsonValue = _.JsonValue, Null = _.Null, toJSObject = _.toJSObject, findNumber = _.findNumber, fromString = _.fromString;
  var _ = Elm.Maybe(elm); var Maybe = _;
  var Just = _.Just, Nothing = _.Nothing, maybe = _.maybe;
  var JS = Elm.JavaScript.Experimental(elm);
  var stringToJson_0 = function(string_3){
    return function(){ 
    var case0 = fromString(string_3);
    switch (case0.ctor) {
      case 'Just':
        return JS.toRecord(toJSObject(case0._0));
      case 'Nothing':
        return JS.fromRecord({
          _:{
          }});
    }_E.Case('Line 8, Column 23') }();};
  var httpToJson_1 = function(response_5){
    return function(){ 
    switch (response_5.ctor) {
      case 'Success':
        return Success(stringToJson_0(response_5._0));
    }
    return response_5; }();};
  var getJson_2 = function(url_7){
    return A2(lift,httpToJson_1,sendGet(constant(url_7)));};
  elm.Native = elm.Native||{};
  var _ = elm.Native.Loader||{};
  _.$op = {};
  _.stringToJson = stringToJson_0;
  _.httpToJson = httpToJson_1;
  _.getJson = getJson_2
  return elm.Loader = _;
  };