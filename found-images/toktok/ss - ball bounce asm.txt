; note: --> after jump and ->- before label
; ball bounce (boolean, 8 bit)
  43fa16:	a0 81 dd 47 00       	mov    0x47dd81,%al
  43fa1b:	84 c0                	test   %al,%al
  43fa1d:	0f 84 53 01 00 00    	je     0x43fb76
-->
; if (ball goes through walls)
; decoding ball coords from struct
  43fa23:	8b 4e 0f             	mov    0xf(%esi),%ecx	; ecs = some struct member
  43fa26:	b8 d3 4d 62 10       	mov    $0x10624dd3,%eax	; eax = 0x10624dd3
  43fa2b:	f7 e9                	imul   %ecx			; edx:eax = ecx * eax
  43fa2d:	c1 fa 0a             	sar    $0xa,%edx		; edx = edx / 1024
  43fa30:	8b c2                	mov    %edx,%eax		; eax = edx
  43fa32:	c1 e8 1f             	shr    $0x1f,%eax		; eax = (eax < 0) ? 1 : 0
  43fa35:	03 d0                	add    %eax,%edx		; edx = edx + eax
  43fa37:	b8 d3 4d 62 10       	mov    $0x10624dd3,%eax	; eax = 0x10624dd3
  43fa3c:	8b ca                	mov    %edx,%ecx		; ecx = edx
  43fa3e:	f7 eb                	imul   %ebx			; edx:eax = ebx * eax
  43fa40:	c1 fa 0a             	sar    $0xa,%edx		; edx = edx / 1024
  43fa43:	8b c2                	mov    %edx,%eax		; eax = edx
  43fa45:	c1 e8 1f             	shr    $0x1f,%eax		; eax = (eax < 0) ? 1 : 0
  43fa48:	03 d0                	add    %eax,%edx		; edx = edx + eax
; if (continue down if coords are ok)
  43fa4a:	85 c9                	test   %ecx,%ecx		; 
  43fa4c:	7c 26                	jl     0x43fa74		; if (ecx < 0) goto...
-->
  43fa4e:	85 d2                	test   %edx,%edx		;
  43fa50:	7c 22                	jl     0x43fa74		; if (edx < 0) goto...
-->
  43fa52:	81 f9 00 04 00 00    	cmp    $0x400,%ecx	;
  43fa58:	7d 1a                	jge    0x43fa74		; if (ecx >= 1024) goto...
-->
  43fa5a:	81 fa 00 04 00 00    	cmp    $0x400,%edx	;
  43fa60:	7d 12                	jge    0x43fa74		; if (edx >= 1024) goto...
-->
; encode coords into one variable
  43fa62:	c1 e2 0a             	shl    $0xa,%edx		; edx = edx * 1024
  43fa65:	03 d1                	add    %ecx,%edx		; edx = edx + ecx
  43fa67:	8b 0d d0 82 48 00    	mov    0x4882d0,%ecx	; ecx = *(0x4882d0)
  43fa6d:	33 c0                	xor    %eax,%eax		; eax = 0
; access map data (8 bit)
  43fa6f:	8a 04 0a             	mov    (%edx,%ecx,1),%al	; al = some tile
  43fa72:	eb 05                	jmp    0x43fa79		; (skip else code block)
-->
; else: (coords are bad at this point)
  43fa74:	b8 14 00 00 00       	mov    $0x14,%eax		; eax = 36
->-
; end if
  43fa79:	3d fd 00 00 00       	cmp    $0xfd,%eax		;
  43fa7e:	74 31                	je     0x43fab1		; if (eax == team brick) goto...
-->
  43fa80:	3d fc 00 00 00       	cmp    $0xfc,%eax		;
  43fa85:	74 2a                	je     0x43fab1		; if (eax == enemy brick) goto...
-->
  43fa87:	3d dc 00 00 00       	cmp    $0xdc,%eax		;
  43fa8c:	74 23                	je     0x43fab1		; if (eax == wormhole) goto...
-->
  43fa8e:	3d ac 00 00 00       	cmp    $0xac,%eax		;
  43fa93:	7c 07                	jl     0x43fa9c		; if (eax < goal) goto... (special)
-->
  43fa95:	3d bf 00 00 00       	cmp    $0xbf,%eax		;
  43fa9a:	7c 15                	jl     0x43fab1		; if (eax < 191) goto...
->>
  43fa9c:	3d fe 00 00 00       	cmp    $0xfe,%eax		; 
  43faa1:	7d 0e                	jge    0x43fab1		; if (eax >= 254) goto...
-->
  43faa3:	3d ab 00 00 00       	cmp    $0xab,%eax		;
  43faa8:	74 07                	je     0x43fab1		; if (eax == safe) goto...
-->
  43faaa:	3d aa 00 00 00       	cmp    $0xaa,%eax		;
  43faaf:	75 02                	jne    0x43fab3		; if (eax != turf flag) goto... (special)
->>
  43fab1:	33 c0                	xor    %eax,%eax		; eax = 0
->-
  43fab3:	83 f8 01             	cmp    $0x1,%eax		; eflags = eax - 1
  43fab6:	7c 13                	jl     0x43facb		; if (eax < 1) goto...
-->
  43fab8:	8b 56 17             	mov    0x17(%esi),%edx	; edx = another struct member
  43fabb:	89 7e 0f             	mov    %edi,0xf(%esi)	; some struct member = edi (new ball coord?)
  43fabe:	f7 da                	neg    %edx			; edx = - edx
  43fac0:	89 56 17             	mov    %edx,0x17(%esi)	; another struct member = edx
  43fac3:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)	; somelocal = 1
  43faca:	00 
->-
  43facb:	8b 4e 0f             	mov    0xf(%esi),%ecx
  43face:	b8 d3 4d 62 10       	mov    $0x10624dd3,%eax ; eax = 0x10624dd3 (274877907)
  43fad3:	f7 e9                	imul   %ecx			; edx:eax = ecx * eax
  43fad5:	c1 fa 0a             	sar    $0xa,%edx		; edx = edx / 1024
  43fad8:	8b c2                	mov    %edx,%eax		; eax = edx
  43fada:	c1 e8 1f             	shr    $0x1f,%eax		; eax = (eax < 0) ? 1 : 0;
  43fadd:	03 d0                	add    %eax,%edx		; edx = edx + eax
  43fadf:	b8 d3 4d 62 10       	mov    $0x10624dd3,%eax
  43fae4:	8b ca                	mov    %edx,%ecx
  43fae6:	8b 56 13             	mov    0x13(%esi),%edx
  43fae9:	f7 ea                	imul   %edx
  43faeb:	c1 fa 0a             	sar    $0xa,%edx
  43faee:	8b c2                	mov    %edx,%eax
  43faf0:	c1 e8 1f             	shr    $0x1f,%eax
  43faf3:	03 d0                	add    %eax,%edx
  43faf5:	85 c9                	test   %ecx,%ecx
  43faf7:	7c 26                	jl     0x43fb1f
-->
  43faf9:	85 d2                	test   %edx,%edx
  43fafb:	7c 22                	jl     0x43fb1f
-->
  43fafd:	81 f9 00 04 00 00    	cmp    $0x400,%ecx
  43fb03:	7d 1a                	jge    0x43fb1f
-->
  43fb05:	81 fa 00 04 00 00    	cmp    $0x400,%edx
  43fb0b:	7d 12                	jge    0x43fb1f
-->
  43fb0d:	c1 e2 0a             	shl    $0xa,%edx
  43fb10:	03 d1                	add    %ecx,%edx
  43fb12:	8b 0d d0 82 48 00    	mov    0x4882d0,%ecx
  43fb18:	33 c0                	xor    %eax,%eax
  43fb1a:	8a 04 0a             	mov    (%edx,%ecx,1),%al
  43fb1d:	eb 05                	jmp    0x43fb24
->>
  43fb1f:	b8 14 00 00 00       	mov    $0x14,%eax
  43fb24:	3d fd 00 00 00       	cmp    $0xfd,%eax
->-
  43fb29:	74 31                	je     0x43fb5c
-->
  43fb2b:	3d fc 00 00 00       	cmp    $0xfc,%eax
  43fb30:	74 2a                	je     0x43fb5c
-->
  43fb32:	3d dc 00 00 00       	cmp    $0xdc,%eax
  43fb37:	74 23                	je     0x43fb5c
-->
  43fb39:	3d ac 00 00 00       	cmp    $0xac,%eax
  43fb3e:	7c 07                	jl     0x43fb47
-->
  43fb40:	3d bf 00 00 00       	cmp    $0xbf,%eax
  43fb45:	7c 15                	jl     0x43fb5c
->>
  43fb47:	3d fe 00 00 00       	cmp    $0xfe,%eax
  43fb4c:	7d 0e                	jge    0x43fb5c
-->
  43fb4e:	3d ab 00 00 00       	cmp    $0xab,%eax
  43fb53:	74 07                	je     0x43fb5c
-->
  43fb55:	3d aa 00 00 00       	cmp    $0xaa,%eax
  43fb5a:	75 02                	jne    0x43fb5e
->>
  43fb5c:	33 c0                	xor    %eax,%eax
->-
  43fb5e:	83 f8 01             	cmp    $0x1,%eax
  43fb61:	7c 13                	jl     0x43fb76
-->
  43fb63:	8b 56 1b             	mov    0x1b(%esi),%edx
  43fb66:	89 5e 13             	mov    %ebx,0x13(%esi)
  43fb69:	f7 da                	neg    %edx
  43fb6b:	89 56 1b             	mov    %edx,0x1b(%esi)
  43fb6e:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
  43fb75:	00 
->-
; end if (ball goes through walls)
