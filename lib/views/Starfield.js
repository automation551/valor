// Generated by CoffeeScript 1.6.3
var Starfield;

Starfield = (function() {
  var LEVELS;

  LEVELS = 6;

  function Starfield(container, viewport) {
    var level, _i, _len, _ref;
    this.container = container;
    this.viewport = viewport;
    this.tilesize = 1024 * 2;
    this.density = 32 * 4;
    this.levels = [this.generateTile(2, [184, 184, 184]), this.generateTile(3, [96, 96, 96]), this.generateTile(4, [52, 52, 52]), this.generateTile(5, [30, 30, 30]), this.generateTile(6, [19, 19, 19])];
    _ref = this.levels;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      level = _ref[_i];
      this.container.addChild(level._displayObject);
    }
  }

  Starfield.prototype.generateTile = function(ratio, color) {
    var buffer, ctx, d, i, id, points, sprite, texture, x, y;
    buffer = document.createElement('canvas');
    buffer.width = this.tilesize;
    buffer.height = this.tilesize;
    ctx = buffer.getContext('2d');
    ctx.webkitImageSmoothingEnabled = false;
    points = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.density * (Math.pow(ratio, 2)); 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        x = Math.random() * this.tilesize;
        y = Math.random() * this.tilesize;
        id = ctx.createImageData(1, 1);
        d = id.data;
        d[0] = color[0];
        d[1] = color[1];
        d[2] = color[2];
        d[3] = 255;
        ctx.putImageData(id, x, y);
        _results.push([x, y]);
      }
      return _results;
    }).call(this);
    texture = PIXI.Texture.fromCanvas(buffer);
    sprite = new PIXI.TilingSprite(texture, this.viewport.w, this.viewport.h);
    return {
      _texture: texture,
      _displayObject: sprite,
      points: points,
      color: color,
      ratio: ratio
    };
  };

  Starfield.prototype.update = function() {
    var level, _i, _len, _ref, _results;
    _ref = this.levels;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      level = _ref[_i];
      _results.push(this.updateLevel(level));
    }
    return _results;
  };

  Starfield.prototype.updateLevel = function(level) {
    level._displayObject.tilePosition.x = -this.viewport.pos.x / level.ratio;
    return level._displayObject.tilePosition.y = -this.viewport.pos.y / level.ratio;
  };

  return Starfield;

})();
