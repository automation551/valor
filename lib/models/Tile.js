// Generated by CoffeeScript 1.6.3
var Tile,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Tile = (function(_super) {
  var mapStruct;

  __extends(Tile, _super);

  Tile.prototype.tx = 0;

  Tile.prototype.ty = 0;

  Tile.prototype.index = 0;

  Tile.prototype.meta = [];

  Tile.prototype._contained = false;

  Tile.prototype._drawn = false;

  Tile.prototype.mapNode = null;

  Tile.prototype.invmass = 0;

  Tile.prototype.w = 16;

  Tile.prototype.h = 16;

  Tile.prototype.offset = new Vector2d(Tile.prototype.w / 2, Tile.prototype.h / 2);

  mapStruct = restruct.int32lu("struct");

  function Tile(tx, ty, index, texture, meta, map) {
    var pos;
    pos = new Vector2d(tx, ty).scaleXY(this.w, this.h).add(this.offset);
    Tile.__super__.constructor.call(this, null, pos, null, this.w, this.h);
    this.tx = tx;
    this.ty = ty;
    this.index = index;
    this.texture = texture;
    this.meta = meta;
    this.map = map;
  }

  Tile.fromFile = function(array, offset, spriteSheet, map) {
    var bytes, i, index, meta, struct, tile, tiles, tx, ty;
    tiles = [];
    i = offset;
    while (i < array.length) {
      bytes = array.subarray(i, i + 4);
      struct = mapStruct.unpack(bytes).struct;
      tx = struct & 0x03FF;
      ty = (struct >>> 12) & 0x03FF;
      index = (struct >>> 24) - 1;
      meta = [i, bytes, struct, struct.toString(2)];
      tile = new Tile(tx, ty, index, meta, map);
      tiles.push(tile);
      i += 4;
    }
    return tiles;
  };

  return Tile;

})(Entity);
