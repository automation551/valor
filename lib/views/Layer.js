// Generated by CoffeeScript 1.6.3
var Layer;

Layer = (function() {
  Layer.layers = {};

  function Layer(scene) {
    this.name = name;
    Layer.layers[name] = this;
    this.viewport = viewport;
    this.tree = new ZTree();
    this.container = new PIXI.DisplayObjectContainer();
    this.scene.stage.addChild(this.container);
    this.red = new DLinkedList();
    this.black = new DLinkedList();
  }

  Layer.prototype.insert = function(entity) {
    return entity._hasGametreeNode = this.tree.insert(entity);
  };

  Layer.prototype.remove = function(entity) {
    if (!entity._hasGametreeNode) {
      return;
    }
    this.tree.remove(entity);
    return entity._hasGametreeNode = false;
  };

  Layer.prototype.addChild = function(entity) {
    if (entity._displayObject) {
      this.container.addChild(entity._displayObject);
    }
    return entity._containerNode = this.black.insert(entity);
  };

  Layer.prototype.removeChild = function(entity) {
    if (!entity._containerNode) {
      return;
    }
    this.removed += 1;
    if (entity._displayObject) {
      this.container.removeChild(entity._displayObject);
    }
    entity._containerNode.remove();
    return entity._containerNode = null;
  };

  Layer.prototype.entities = 0;

  Layer.prototype.update = function(gametime) {
    this.entities = 0;
    this.gametime = gametime;
    return this.tree.searchExpand(this.viewport._extent, 16, 16, this.updateObject, this);
  };

  Layer.prototype.updateObject = function(entity) {
    this.entities += 1;
    if (entity._containerNode) {
      this.black.insertNode(entity._containerNode.remove());
    } else {
      this.addChild(entity);
    }
    return entity.update();
  };

  Layer.prototype.removed = 0;

  Layer.prototype.sweep = function() {
    var oldRed;
    this.removed = 0;
    this.red.each(this.removeChild, this);
    oldRed = this.red;
    this.red = this.black;
    return this.black = oldRed;
  };

  return Layer;

})();
