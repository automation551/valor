// Generated by CoffeeScript 1.6.3
var Physics;

Physics = (function() {
  var impulse, manifold, normal, rv;

  function Physics() {}

  Physics.collision = function(a, b) {
    if (a.lr.x < b.ul.x || a.ul.x > b.lr.x) {
      return false;
    }
    if (a.lr.y < b.ul.y || a.ul.y > b.lr.y) {
      return false;
    }
    return true;
  };

  normal = new Vector2d(0, 0);

  manifold = {
    normal: normal,
    penetration: 0
  };

  Physics.overlap = function(a, b) {
    var x_overlap, y_overlap;
    manifold.penetration = 0;
    normal.clear().add(b.pos).sub(a.pos);
    x_overlap = a.hw + b.hw - Math.abs(normal.x);
    if (!(x_overlap > 0)) {
      return null;
    }
    y_overlap = a.hh + b.hh - Math.abs(normal.y);
    if (!(y_overlap > 0)) {
      return null;
    }
    if (x_overlap < y_overlap) {
      normal.y = 0;
      manifold.penetration = x_overlap;
      if (normal.x < 0) {
        normal.x = -1;
      } else {
        normal.x = 1;
      }
    } else {
      normal.x = 0;
      manifold.penetration = y_overlap;
      if (normal.y < 0) {
        normal.y = -1;
      } else {
        normal.y = 1;
      }
    }
    return manifold;
  };

  rv = new Vector2d(0, 0);

  impulse = new Vector2d(0, 0);

  Physics.resolve = function(a, b) {
    var c, e, j, m, percent, slop, vn;
    if (!(m = this.overlap(a, b))) {
      return null;
    }
    rv.clear().add(b.vel).sub(a.vel);
    vn = rv.dot(m.normal);
    if (vn > 0) {
      return null;
    }
    e = a.bounciness;
    if (a.maxSpeed != null) {
      e *= Math.abs(vn / a.maxSpeed);
    }
    j = -(1 + e) * vn;
    impulse.clear().add(m.normal).scaleXX(j).scaleXX(a.invmass);
    a.vel.sub(impulse);
    percent = Math.abs(vn / a.maxSpeed);
    slop = 0.01;
    c = Math.max(m.penetration - slop, 0);
    m.normal.scaleXX(c * a.invmass);
    return a.pos.sub(m.normal);
  };

  return Physics;

})();
