// Generated by CoffeeScript 1.6.3
(function() {
  var Subspace;

  Subspace = (function() {
    function Subspace() {}

    Subspace.prototype.init = function(window) {
      var oReq, offscreen, onscreen,
        _this = this;
      offscreen = window.document.getElementById('offscreen');
      onscreen = window.document.getElementById('onscreen');
      this.offctx = offscreen.getContext('2d');
      this.onctx = onscreen.getContext('2d');
      this.viewPort = {
        width: onscreen.clientWidth,
        height: onscreen.clientHeight
      };
      oReq = new XMLHttpRequest();
      oReq.open("GET", "../arenas/trench9.lvl", true);
      oReq.responseType = "arraybuffer";
      window.tiles = [];
      oReq.onload = function(oEvent) {
        _this.parseLevel(oEvent);
        return _this.start();
      };
      return oReq.send(null);
    };

    Subspace.prototype.start = function() {
      var ship;
      ship = new Image("assets/ship2.png");
      this.offctx.scale(0.25, 0.25);
      return this.offctx.drawImage(ship, this.viewPort.width / 2 - 170 / 4 / 2, this.viewPort.height + 166 / 4 / 2);
    };

    Subspace.prototype.parseLevel = function(oEvent) {
      var a, arrayBuffer, bmp, bmpLength, bmp_data, bmp_size, bytes, canvas, i, mapStruct, struct, tile, x, y, _results;
      bmpLength = restruct.int32lu("length");
      mapStruct = restruct.int32lu("struct");
      arrayBuffer = oEvent.target.response;
      if (arrayBuffer) {
        a = new Uint8Array(arrayBuffer);
        bmp_size = bmpLength.unpack(a.subarray(2, 6)).length;
        bmp_data = a.subarray(0, bmp_size);
        bmp = new BMPImage(bmp_data.buffer);
        canvas = window.document.createElement("canvas");
        canvas.name = "tileset";
        bmp.drawToCanvas(canvas);
        window.tileset = canvas;
        canvas.style.position = "absolute";
        canvas.style.zIndex = 100;
        canvas.style.top = 0;
        window.document.body.appendChild(canvas);
        i = bmp_size;
        _results = [];
        while (i < a.length) {
          bytes = a.subarray(i, i + 4);
          struct = mapStruct.unpack(bytes).struct;
          x = struct & 0x03FF;
          y = (struct >>> 12) & 0x03FF;
          tile = struct >>> 24;
          window.tiles.push({
            x: x,
            y: y,
            tile: tile,
            meta: [i, length, bytes, struct, struct.toString(2)]
          });
          _results.push(i += 4);
        }
        return _results;
      }
    };

    return Subspace;

  })();

  (new Subspace).init(this);

}).call(this);
