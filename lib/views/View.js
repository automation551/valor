// Generated by CoffeeScript 1.6.3
var View;

View = (function() {
  var layerMap, objectCounter, viewMap;

  View.prototype.doPos = new Vector2d(0, 0);

  viewMap = {};

  layerMap = {};

  View.prototype.layer = null;

  View.prototype.displayed = false;

  View.prototype.hash = 0;

  objectCounter = 0;

  View.extended = function(klass, layer) {
    viewMap[klass.name.replace(/View/, '')] = klass;
    return layerMap[klass.name] = layer;
  };

  View.build = function(scene, entity) {
    var view;
    view = new viewMap[entity.constructor.name](entity);
    view.layer = view.layerFor(scene, entity);
    view.layer.addChild(view.displayObject);
    return view;
  };

  function View(entity, displayObject) {
    this.entity = entity;
    this.displayObject = displayObject;
    this.displayed = false;
    this.hash = (objectCounter += 1);
  }

  View.prototype.update = function(viewport) {
    if (!this.entity) {
      return false;
    }
    if (!(this.entity.lifetime > 0)) {
      return false;
    }
    if (!this.displayObject) {
      return false;
    }
    this.displayed = true;
    this.doPos.clear().add(this.entity.pos).sub(viewport._extent.ul);
    this.displayObject.position.x = this.doPos.x;
    this.displayObject.position.y = this.doPos.y;
    return true;
  };

  View.prototype.layerFor = function(scene, entity) {
    var layerName;
    layerName = layerMap[constructor.name];
    return scene.layers[layerName];
  };

  View.prototype.remove = function() {
    return layer.removeChild(this.displayObject);
  };

  return View;

})();
