// Generated by CoffeeScript 1.6.3
var Simulator;

Simulator = (function() {
  function Simulator() {
    this.staticTree = new ZTree;
    this.dynamicTree = new ZTree;
    this.collisions = {};
    Simulator.simulator = this;
  }

  Simulator.prototype.insert = function(entity) {
    return this.dynamicTree.insert(entity);
  };

  Simulator.prototype.remove = function(entity) {
    return this.dynamicTree.remove(entity);
  };

  Simulator.prototype.insertStatic = function(entity) {
    return this.staticTree.insert(entity);
  };

  Simulator.prototype.step = function(game, timestamp, delta_s) {
    var _this = this;
    this.collisions = {};
    return this.dynamicTree.each(function(entity) {
      var tree, _i, _len, _ref, _results;
      entity.simulate(delta_s);
      _ref = [_this.staticTree, _this.dynamicTree];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tree = _ref[_i];
        _results.push(tree.searchExpand(entity._extent, 16, 16, function(nearEntity) {
          if (entity === nearEntity) {
            return false;
          }
          if (this.collisions[entity.hash]) {
            return false;
          }
          if (this.collisions[nearEntity.hash]) {
            return false;
          }
          if (Physics.collision(entity._extent, nearEntity._extent)) {
            entity.collide(nearEntity);
            nearEntity.collide(entity);
            this.collisions[entity.hash] = entity;
            return this.collisions[nearEntity.hash] = nearEntity;
          }
        }, _this));
      }
      return _results;
    });
  };

  return Simulator;

})();
